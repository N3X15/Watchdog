{#
  This YAML configuration file supports Jinja2 templating.  This, obviously, is a comment.
  
  Anything in {% %} are a command to Jinja2. {{ ... }} render the specified variable. {{ blah|yaml_encode }} runs the variable blah through yaml_encode().
  
  You don't have to use Jinja2, but it makes things a little simpler.
  
  VARIABLES PASSED:
    home_dir: Whatever ~ is.  Usually /home/username on Linux, C:\Users\username on Windows.
    script_dir: Wherever Watchdog.py was run from.
#}
{% set game_dir = home_dir + '/garrysmod' %}{# Equivalent to ~/garrysmod. #}
{% set mod_dir = game_dir + '/garrysmod' %}
# All the Steam content to pull down.
#  See games.d for names to use here.
content:
  garrysmod:
    dir: {{ game_dir }}
  # Comment these out if you don't need them.
  tf2: {}
  hl2: {}
  hl2ep1: {}
  hl2ep2: {}
  hl2mp: {}
  cstrike: {}
auth:
  steam:
    # For games that require a login, you'll need to fill this out.
    #  It'll only be used on games that absolutely require a login.
    username: ''
    password: ''
    #steamguard: '' # SteamGuard token, if you have it enabled.
  rcon:
    # Set rcon_password to this when you join your server.
    password: ''
    
# Required on Linux.  Do NOT change this or things will go sideways.
env:
  LD_LIBRARY_PATH: {{ game_dir }}:{{ game_dir }}/bin
git:
  # If you want to version-control your configuration, fill this out.
  config:
    type: git # git or hg
    remote: your@git:repo/uri
    branch: master # Branch you're using, assuming git or hg
    subdirs: # Specify subdirectories to copy over. source: destination
      # This one means {git repo}/cfg/ -> {game directory}[/mod directory]/cfg/
      cfg: cfg
      lua: lua
      data: data
      settings: settings
    
# Monitoring configuration
monitor:
  # Process name to look for.
  image: srcds_linux
  # PUBLIC IP of your server.
  ip: xxx.xxx.xxx.xxx
  # Port the server listens on.
  port: 27015
  # Maximum number of failures before Watchdog shuts down.
  max-fails: 3
  #
  threads: false
  # Seconds to wait for a response to a PING.
  timeout: 10.0
  # Seconds between warning and restart. 
  restart-wait: 30
  # What actions to take if an addon is updated.
  # Possible: DELAYED, IMMEDIATE
  #  DELAYED: Wait until server exits to perform updates
  #  IMMEDIATE: Issue a warning, then restart.
  restart-types:
    addon: delayed
    content: delayed
    config: immediate
  
# Nudge Notification System configuration
# (Not used at the moment)
nudge:
  # ID tag for this server
  id: Test Server
  # IP of the nudge receiver.
  ip: localhost
  # Port to send to
  port: 45678
  # Passcode for the nudge receiver.
  key: my secret passcode
  
  
paths:
  # Where particular addon types will end up going.
  addons:
    # Garry's Mod Lua addons (and GMAs)
    lua: {{ mod_dir }}/addons
    # MetaMod:Source addons
    metamod: {{ mod_dir }}/addons
    # SourceMod addons
    sourcemod: {{ mod_dir }}/addons/sourcemod
    
  # Where configuration data will be checked out to
  config: {{ mod_dir }}
  # Where crash cores will be left
  cores: {{ home_dir }}/steam/cores/
  # Crash log location
  crashlog: {{ home_dir }}/steam/crashlogs/
  # Directory from which to run srcds
  run: {{ game_dir }}
  # Not used yet
  stats: stats.json
  # SteamCMD directory
  steamcmd: {{ home_dir }}/steamcmd
  
# Game daemon config
daemon:
  engine: srcds
  launcher: srcds_linux
  srcds_args:
    # PUBLIC IP of the server.
    ip: 1.2.3.4
    #authkey: Steam API key goes here 
    autoupdate: ''
    game: garrysmod
  game_args:
    
    gamemode: sandbox
    # ID of your workshop collection.
    host_workshop_collection: 000000
    # Map to use.
    map: gm_flatgrass
    maxplayers: 32
